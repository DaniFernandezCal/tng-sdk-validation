{
  "openapi" : "3.0.0",
  "servers" : [ ],
  "info" : {
    "description" : "This is the API of the 5GTANGO TNG-SDK-VALIDATION tool. This is still a work in progress so the API may be modified",
    "version" : "1.0.3",
    "title" : "5GTANGO TNG-SDK-VALIDATION tool API",
    "contact" : {
      "email" : "anton.roman@quobis.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  } ],
  "paths" : {
    "/validations" : {
      "post" : {
        "tags" : [ "developers" ],
        "summary" : "searches validation reports",
        "operationId" : "validate",
        "description" : "It instructs the validator to perform the validation of the specified object according to the specified parameters\navailable validation report in the history of validations done\nwith the tool\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "source",
          "description" : "source of the descriptor file. It can take the values 'url' (when the source is a URL), 'local' when the file is a file from the local file system and 'embedded' when the descriptor is included as an attachment in the request. In the first two cases a path parameter is required.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "embedded", "local", "url" ]
          }
        }, {
          "in" : "query",
          "name" : "path",
          "description" : "specifies the local path of the url the file which contains the object to be validated",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "dpath",
          "description" : "specifies the local directory to search for function descriptors. Usefull when using the service validation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "dext",
          "description" : "indicates the extension of the function files when a folder of functions will be validated",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "file",
          "description" : "file name which contains the descriptor of the project, package, service or function to be validated",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "cfile",
          "description" : "indicates the file where the custom rules will be defined",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "sync",
          "description" : "parametyer to indicate if the request must be processed in synchronous way\nreturnig the result of the validation within a 200 OK reply to the POST to create \nthe validation resource, if this param is omitted or False then the request is \nreplied with a 202 Accepted and the result of the validation must be requested \nagainst the validation resource passed in the validation uuid\n",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "syntax",
          "description" : "indicates that syntax of the object must be validated",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "integrity",
          "description" : "indicates that integrity must be validated",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "topology",
          "description" : "indicates that topology must be validated",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "custom",
          "description" : "indicates that custom rules must be validated",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "workspace",
          "description" : "indicates the workspace path of the project to be validated",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "function",
          "description" : "indicates if the descriptor to be validated corresponds to a function",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "project",
          "description" : "indicates if the request want to validate a project",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "service",
          "description" : "indicates if the descriptor to be validated corresponds to a service",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "synchronous answer results of the validation process",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ValidationSyncResult"
                  }
                }
              }
            }
          },
          "202" : {
            "description" : "asynchronous with confirms that the validation object has been created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationAsyncResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad input parameter. A descriptive message will be provided with the error reply"
          }
        }
      },
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "searches validation reports",
        "description" : "(Not yet available) By passing in the appropriate options, you can search for\navailable validation in the history of validations. By default it returns a complete\nlist of validations\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "rid",
          "description" : "(Not available yet) resource ID to return",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "(Not available yet)  number of records to skip for pagination",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "(Not available yet) maximum number of records to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0,
            "maximum" : 50
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/resourceItem"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "delete" : {
        "tags" : [ "developers" ],
        "summary" : "delete all validations cached",
        "description" : "This endpoint delete all validations cached \n",
        "responses" : {
          "200" : {
            "description" : "if the validations wares deleted"
          }
        }
      }
    },
    "/validations/{validationId}" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "returns a validation reports",
        "description" : "This endpoint returns validation report for the specified validationId\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "validationId",
          "description" : "validation ID of validation objects to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "returns a validation report",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ValidationSyncResult"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "If the validation specified by validationId was not exist in cache"
          }
        }
      },
      "delete" : {
        "tags" : [ "developers" ],
        "summary" : "delete a validation cached specified by validationId",
        "description" : "This endpoint delete validation cached specified by validationId \n",
        "parameters" : [ {
          "in" : "path",
          "name" : "validationId",
          "description" : "validation ID of validation objects to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "if the validation was deleted"
          },
          "404" : {
            "description" : "If the validation specified by validationId was not exist in cache"
          }
        }
      }
    },
    "/validations/{validationId}/topology" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "searches validation reports",
        "operationId" : "searchReport",
        "description" : "(Not yet available) It returns the topology generated in a valiation identified by vid\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "validationId",
          "description" : "resource ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TopologyObject"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/validations/{validationId}/fwgraph" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "searches validation reports",
        "operationId" : "searchReport",
        "description" : "(Not yet available) it return the last fwgraph for a resource if available\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "validationId",
          "description" : "pass an optional search string for looking up inventory",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FwgraphObject"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/resources" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "searches validated resources in the cache",
        "operationId" : "getResource",
        "description" : "(Not yet available) It returns a list of the cached resources by the validation tool\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "searchString",
          "description" : "(Not available yet) pass an optional search string for looking up inventory",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "resourceId",
          "description" : "(Not available yet) resource ID to return",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "(Not available yet) number of records to skip for pagination",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "(Not available yet)  number of records to return",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0,
            "maximum" : 50
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ValidationAsyncResult"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/watchers" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "searches validated resources in the cache",
        "operationId" : "getResource",
        "description" : "(Not yet available) Returns a list of resources watched by the validation tool, it means that they will automatically validated when a modification in the file is detected\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "searchString",
          "description" : "(Not implemented yet) pass an optional search string for looking up inventory",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/WatchObject"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "404" : {
            "description" : "No validation found"
          },
          "503" : {
            "description" : "error in the validation service"
          }
        }
      },
      "post" : {
        "tags" : [ "developers" ],
        "summary" : "Creates a new observed resource. The service will subscribe to any change in the file and will perform a validaton when   modification in the file takes place",
        "parameters" : [ {
          "in" : "query",
          "name" : "syntax",
          "description" : "indicates that syntax of the object must be validated",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "integrity",
          "description" : "indicates that integrity must be validated",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "in" : "query",
          "name" : "topology",
          "description" : "indicates that topology must be validated",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "watchers correcty created"
          },
          "400" : {
            "description" : "bad parameters"
          },
          "503" : {
            "description" : "service not available"
          }
        }
      },
      "delete" : {
        "tags" : [ "developers" ],
        "summary" : "deletes all the watchers",
        "responses" : {
          "200" : {
            "description" : "watchers correcty deleted"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ValidationAsyncResult" : {
        "type" : "object",
        "properties" : {
          "vid" : {
            "type" : "string"
          },
          "rid" : {
            "type" : "string"
          },
          "syntax" : {
            "type" : "boolean"
          },
          "topology" : {
            "type" : "boolean"
          },
          "integrity" : {
            "type" : "boolean"
          },
          "validation_type" : {
            "description" : "indicates the type of validations included in this validation instance",
            "type" : "string",
            "enum" : [ "project", "service", "function" ]
          }
        }
      },
      "resourceItem" : {
        "type" : "object",
        "required" : [ "resourceId", "type", "hashFile" ],
        "properties" : {
          "resourceId" : {
            "type" : "string"
          },
          "validations" : {
            "type" : "array",
            "description" : "validations performed for this resource.",
            "items" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string",
                  "format" : "url"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "validation" ]
                }
              }
            }
          },
          "type" : {
            "description" : "indicates the type of resource",
            "type" : "string",
            "enum" : [ "project", "service", "function" ]
          },
          "hashFile" : {
            "description" : "hash of the resource used to detect if there have been changes in a resource",
            "type" : "string"
          },
          "includedResources" : {
            "description" : "resources which belong to this",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/resourceItem"
            }
          }
        }
      },
      "TopologyObject" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          }
        }
      },
      "FwgraphObject" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          }
        }
      },
      "WatchObject" : {
        "type" : "object",
        "properties" : {
          "rid" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "type" : {
            "description" : "indicates the type of validation which is done for this watched resource",
            "type" : "string",
            "enum" : [ "project", "service", "function" ]
          },
          "syntax" : {
            "type" : "boolean"
          },
          "integrity" : {
            "type" : "boolean"
          },
          "topology" : {
            "type" : "boolean"
          }
        }
      },
      "ValidationSyncResult" : {
        "type" : "object",
        "properties" : {
          "vid" : {
            "type" : "string"
          },
          "syntax" : {
            "type" : "boolean"
          },
          "topology" : {
            "type" : "boolean"
          },
          "integrity" : {
            "type" : "boolean"
          },
          "custom" : {
            "type" : "boolean"
          },
          "validation_type" : {
            "description" : "indicates the type of validations included in this validation instance",
            "type" : "string",
            "enum" : [ "project", "service", "function" ]
          },
          "resources" : {
            "type" : "array",
            "description" : "resources related with this validation.",
            "items" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string",
                  "format" : "url"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "resource" ]
                }
              }
            }
          },
          "result" : {
            "type" : "object",
            "properties" : {
              "error_count" : {
                "type" : "integer"
              },
              "warning_count" : {
                "type" : "integer"
              },
              "vid" : {
                "type" : "string"
              },
              "errors" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "source_id" : {
                      "type" : "string"
                    },
                    "event_code" : {
                      "type" : "string"
                    },
                    "level" : {
                      "type" : "string",
                      "enum" : [ "error", "warning" ]
                    },
                    "event_id" : {
                      "type" : "string"
                    },
                    "header" : {
                      "type" : "string"
                    },
                    "detail" : {
                      "type" : "object",
                      "properties" : {
                        "message" : {
                          "type" : "string"
                        },
                        "detail_event_id" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
